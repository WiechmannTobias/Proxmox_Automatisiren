#!/bin/bash

# Variablen
WG_INTERFACE="wg0"
WG_CONFIG="/etc/wireguard/$WG_INTERFACE.conf"
LOCAL_NETWORK="192.168.240.0/24"  # Ersetze dies durch dein lokales Netzwerk

# WireGuard Konfiguration
PRIVATE_KEY="8LOi+kntqTolCAS4N6OD/gvmszXQtPFWWdFtnt3ICE4="
ADDRESS="10.8.0.5/24"
DNS="1.1.1.1"
PEER_PUBLIC_KEY="JK/Yv1/A1CitI4mminm9gedpSToSPo1UFWG158knCRY="
PRESHARED_KEY="21i+qPY3+LKFlKLEsUp2qI3i7xxeSppnAUGdpNCgDBw="
ALLOWED_IPS=" 0.0.0.0/1, 128.0.0.0/1, ::/1, 8000::/1"
ENDPOINT="85.215.35.43:51820"

# Funktion zur Installation von WireGuard
install_wireguard() {
    echo "Installiere WireGuard..."
    if [ -x "$(command -v apt)" ]; then
        apt update && apt install -y wireguard
    elif [ -x "$(command -v yum)" ]; then
        yum install -y epel-release && yum install -y wireguard-tools
    else
        echo "Unterstützter Paketmanager nicht gefunden. Bitte manuell installieren."
        exit 1
    fi
}

# Funktion zur Konfiguration von WireGuard
configure_wireguard() {
    echo "Erstelle WireGuard-Konfigurationsdatei..."
    cat <<EOF > $WG_CONFIG
[Interface]
PrivateKey = $PRIVATE_KEY
Address = $ADDRESS
DNS = $DNS

[Peer]
PublicKey = $PEER_PUBLIC_KEY
PresharedKey = $PRESHARED_KEY
AllowedIPs = $ALLOWED_IPS
Endpoint = $ENDPOINT
EOF

    chmod 600 $WG_CONFIG
    echo "WireGuard-Konfiguration erstellt unter $WG_CONFIG."
}

# Funktion zur Aktivierung von WireGuard und Hinzufügen einer Regel für internes Netzwerk
enable_wireguard() {
    echo "Starte und aktiviere WireGuard..."
    systemctl enable wg-quick@$WG_INTERFACE
    systemctl start wg-quick@$WG_INTERFACE

    echo "Konfiguriere Routing-Regeln, um das lokale Netzwerk zugänglich zu halten..."
    ip rule add from $LOCAL_NETWORK lookup main
    echo "Routing-Regeln hinzugefügt."
}

# Hauptablauf
if ! [ -x "$(command -v wg)" ]; then
    install_wireguard
fi

configure_wireguard
enable_wireguard

echo "WireGuard-Client erfolgreich konfiguriert."

# Teste die Verbindung
ping -c 4 1...1

# Zeige den Status von WireGuard
systemctl status wg-quick@$WG_INTERFACE
