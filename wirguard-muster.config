#!/bin/bash

# Variablen
WG_INTERFACE="wg0"
WG_CONFIG="/etc/wireguard/$WG_INTERFACE.conf"
LOCAL_NETWORK="192.168.240.0/24"  # Ersetze dies durch dein lokales Netzwerk

# WireGuard Konfiguration
PRIVATE_KEY="ICE4="
ADDRESS="1.5/24"
DNS="1.1.1.1"
PEER_PUBLIC_KEY="JK/Yv1"
PRESHARED_KEY="21i+qPY3"
ALLOWED_IPS="10./24, 192.16.0/24"  # Nur VPN- und lokales Netzwerk
ENDPOINT=":51820"

# Funktion zur Installation von WireGuard
install_wireguard() {
    echo "Installiere WireGuard..."
    if [ -x "$(command -v apt)" ]; then
        apt update && apt install -y wireguard
    elif [ -x "$(command -v yum)" ]; then
        yum install -y epel-release && yum install -y wireguard-tools
    else
        echo "Unterstützter Paketmanager nicht gefunden. Bitte manuell installieren."
        exit 1
    fi
}

# Funktion zur Konfiguration von WireGuard
configure_wireguard() {
    echo "Erstelle WireGuard-Konfigurationsdatei..."
    cat <<EOF > $WG_CONFIG
[Interface]
PrivateKey = $PRIVATE_KEY
Address = $ADDRESS
DNS = $DNS
PostUp = iptables -t nat -A POSTROUTING -o vmbr0 -j MASQUERADE
PostDown = iptables -t nat -D POSTROUTING -o vmbr0 -j MASQUERADE

[Peer]
PublicKey = $PEER_PUBLIC_KEY
PresharedKey = $PRESHARED_KEY
AllowedIPs = $ALLOWED_IPS
Endpoint = $ENDPOINT
EOF

    chmod 600 $WG_CONFIG
    echo "WireGuard-Konfiguration erstellt unter $WG_CONFIG."
}

# Funktion zur Aktivierung von WireGuard und Hinzufügen einer Regel für internes Netzwerk
enable_wireguard() {
    echo "Starte und aktiviere WireGuard..."
    systemctl enable wg-quick@$WG_INTERFACE
    systemctl start wg-quick@$WG_INTERFACE

    echo "Überprüfe und korrigiere Standardroute, falls erforderlich..."
    DEFAULT_ROUTE=$(ip route | grep '^default' | awk '{print $5}')
    if [[ "$DEFAULT_ROUTE" != "vmbr0" ]]; then
        echo "Setze Standardroute über vmbr0..."
        ip route add default via 192.168.240.1 dev vmbr0
    fi

    echo "Routing-Regeln überprüft und ggf. korrigiert."
}

# Hauptablauf
if ! [ -x "$(command -v wg)" ]; then
    install_wireguard
fi

configure_wireguard
enable_wireguard

echo "WireGuard-Client erfolgreich konfiguriert."

# Teste die Verbindung
ping -c 4 8.8.8.8  # Internetverbindung testen
ping -c 4 .1  # VPN-Gateway testen

# Zeige den Status von WireGuard
systemctl status wg-quick@$WG_INTERFACE
